{"version":3,"sources":["logo.svg","math/matrix.js","math/vector.js","math/linalg.js","gl-tools/camera.js","gl-tools/primitive-3d.js","gl-tools/object-3d.js","gl-tools/cube.js","gl-tools/drawer.js","gl-tools/square-pyramid.js","gl-tools/triangular-pyramid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Matrix","arr2D","Object","classCallCheck","this","data","matrix","_this","result","_loop","k","row","i","length","push","map","t","j","reduce","a","b","transpose","Vector","console","log","isSquare","Error","d","_findD","_this2","sign","_loop2","toConsumableArray","slice","u","splice","reverse","adj","main_sign","inv","adjugate","constMultiply","determinant","value","vector","resolved","NaN","arr","concat","resilved","construct","size","rows","_len","arguments","Array","_key","some","x","Math","pow","checkForOperetion","sqrt","substruct","powConst","sum","every","divideConst","LinAlg","x1","x2","y1","y2","z1","z2","theta","sin","cos","multiply","asMarix","asVector","y","z","ratio","scaleXYZ","rotateX","rotateY","rotateZ","Camera","position","scaleX","scaleY","scaleZ","translateX","translateY","translateZ","rotateMatrix","identity","scaleMatrix","translateMatrix","rotate","translate","camera","Primitive3D","colors","possibleConstructorReturn","getPrototypeOf","call","Object3D","props","getInstance","callback","transform","getTransformed","vertexes","original_vertexes","path","Component","Cube","Drawer","vertexShader","fragmentShader","buffer","gl","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","shaderText","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","program","createProgram","attachShader","linkProgram","name","attr","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","vBuffer","buffer_static_array","cBuffer","compile_shader","VERTEX_SHADER","FRAGMENT_SHADER","getProgram","useProgram","bind","obg3DArr","children","getTransformedColors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","obg","err","return","prepare","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","DEPTH_TEST","drawArrays","TRIANGLES","requestAnimationFrame","draw","canvas","getContext","_this3","react_default","createElement","width","window","innerHeight","height","ref","SquarePyramid","TriangularPyramid","App","mat","cube1","cube2","cube3","className","drawer_Drawer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95dc91d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import Vector from \"./vector\";\r\n\r\nexport default class Matrix {\r\n\r\n    constructor(arr2D) {\r\n        this.data = arr2D;\r\n    }\r\n    multiply(matrix) {\r\n        const result = [];\r\n        for (let k=0; k<matrix.data[0].length; k++) {\r\n            const row = [];\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                row.push(\r\n                    this.data[i]\r\n                        .map((t, j) => t * matrix.data[j][k])\r\n                        .reduce((a, b) => a + b, 0)\r\n                );\r\n            }\r\n            result.push(row);\r\n        }\r\n        return new Matrix(result).transpose();\r\n    }\r\n    asVector() {\r\n        // if (this.data.length > 1) {\r\n        //     throw new DOMException('Matrix with more then 1 row cannot be converted to Vector');\r\n        // }\r\n        return new Vector(this.data.map(t => {console.log(t); return t[0]}));\r\n    }\r\n    transpose() {\r\n        if (this.t) return new Matrix(this.t);\r\n        const result = [];\r\n        for (let i=0; i<this.data[0].length; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < this.data.length; j++) {\r\n                row.push(this.data[j][i]);\r\n            }\r\n            result.push(row);\r\n        }\r\n        this.t = result;\r\n        return new Matrix(result);\r\n    }\r\n    isSquare() {\r\n        return this.data.length !== this.data[0].length\r\n    }\r\n    determinant() {\r\n        if (this.isSquare()) {\r\n            console.log(this);\r\n            throw new Error('cannot get determinant of non square matrix');\r\n        }\r\n        if (this.d) return this.d;\r\n        this.d = this._findD(this.data);\r\n        return this.d;\r\n    }\r\n    _findD(matrix) {\r\n        if (matrix.length === 1) {\r\n            return matrix[0][0];\r\n        }\r\n        let sign = 1;\r\n        let d = 0;\r\n        for (let i = 0; i < matrix.length; i++) {\r\n            d += sign * matrix[0][i] * this._findD([...matrix].slice(1).map(t => { let u = [...t]; u.splice(i, 1); return u}));\r\n            sign = -sign;\r\n        }\r\n        return d;\r\n    }\r\n    reverse() {\r\n        return new Matrix(this.data.reverse().map(t => t.reverse()));\r\n    }\r\n    adjugate() {\r\n        if (this.adj) {\r\n            return new Matrix(this.adj);\r\n        }\r\n        let result = [];\r\n        let main_sign = 1;\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            let row = [];\r\n            let sign = main_sign;\r\n            for (let j = 0; j < this.data[0].length; j++) {\r\n                row.push(this.data[i][j] * sign);\r\n                sign *= -1;\r\n            }\r\n            result.push(row);\r\n            main_sign *= -1;\r\n        }\r\n        this.adj = result;\r\n        return new Matrix(result);\r\n    }\r\n    invarse() {\r\n        if (this.inv) {\r\n            return new Matrix(this.inv);\r\n        }\r\n        const result = this.transpose().reverse().adjugate().constMultiply(1/this.determinant());\r\n        this.inv = result.data;\r\n        return result;\r\n    }\r\n    constMultiply(value) {\r\n        const result = [];\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            const row = [];\r\n            for (let j = 0; j < this.data.length; j++) {\r\n                row.push(this.data[i][j] * value);\r\n            }\r\n            result.push(row);\r\n        }\r\n        return new Matrix(result);\r\n    }\r\n    resolve(vector) {\r\n        if (this.resolved) {\r\n            return this.resolved;\r\n        }\r\n        if (this.isSquare()) {\r\n            throw new Error('resolve() can be applied only on square matrix');\r\n        }\r\n        if (vector.data.length !== this.data.length) {\r\n            throw new Error('the resolve() vector length must be same as matrix length');\r\n        }\r\n        if (!this.determinant()) {\r\n            return NaN;\r\n        }\r\n        const arr = [];\r\n        for (let i=0; i<this.data.length; i++) {\r\n            arr.push(new Matrix([...this.data.slice(0, i), vector.data, ...this.data.slice(i + 1, this.data.length)]).determinant() / this.determinant());\r\n        }\r\n        this.resilved = new Vector(...arr);\r\n        return this.resilved;\r\n\r\n    }\r\n    static identity(size) {\r\n        const rows = [];\r\n        for (let i = 0; i < size; i++) {\r\n            rows.push([]);\r\n            for (let j = 0; j < size; j++) {\r\n                rows[i].push(i === j ? 1 : 0);\r\n            }\r\n        }\r\n        return new Matrix(rows);\r\n    }\r\n}","import Matrix from \"./matrix\";\r\n\r\nexport default class Vector {\r\n\r\n    constructor(...arr) {\r\n        if (arr.some(t => {if (typeof t !== 'number') {console.log(typeof t, t); return true;} return false; })) {\r\n            throw new Error('the Vector must receive numbers only');\r\n        }\r\n        this.data = arr;\r\n    }\r\n    asMarix() {\r\n        return new Matrix([this.data]);\r\n    }\r\n    addConst(x) {\r\n        return new Vector( ...this.data.map(t => t + x));\r\n    }\r\n    substructConst(x) {\r\n        return new Vector(...this.data.map(t => t - x));\r\n    }\r\n    multiplyConst(x) {\r\n        return new Vector(...this.data.map(t => t * x));\r\n    }\r\n    divideConst(x) {\r\n        return new Vector(...this.data.map(t => t / x));\r\n    }\r\n    powConst(x) {\r\n        return new Vector(...this.data.map(t => Math.pow(t, x)));\r\n    }\r\n    sum() {\r\n        return this.data.reduce((a, b) => a + b, 0);\r\n    }\r\n    add(vector) {\r\n        this.checkForOperetion(vector);\r\n        return new Vector(...this.data.map((t, i) => t + vector.data[i]));\r\n    }\r\n    substruct(vector) {\r\n        this.checkForOperetion(vector);\r\n        return new Vector(...this.data.map((t, i) => t - vector.data[i]));\r\n    }\r\n    dot(vector) {\r\n        this.checkForOperetion(vector);\r\n        return new Vector(...this.data.map((t, i) => t * vector.data[i]));\r\n    }\r\n\r\n    module() {\r\n        return Math.sqrt(this.data.reduce((a, b) => a + b**2, 0));\r\n    }\r\n    divide(vector) {\r\n        this.checkForOperetion(vector);\r\n        return new Vector(...this.data.map((t, i) => t / vector.data[i]));\r\n    }\r\n    distance(vector) {\r\n        this.checkForOperetion(vector);\r\n        return Math.sqrt(this.substruct(vector).powConst(2).sum());\r\n    }\r\n    checkForOperetion(vector) {\r\n        if (!(vector instanceof Vector)) {\r\n            throw new Error('this function expect to receive a Vector as a parameter, ' + (typeof vector) + ' given');\r\n        }\r\n        if (vector.data.length !== this.data.length) {\r\n            throw new Error('The length of the Vectors need to be the same in any vector operation');\r\n        }\r\n    }\r\n    print() {\r\n        console.log(this.data);\r\n    }\r\n    isParralel(vector) {\r\n        this.checkForOperetion(vector);\r\n        return this.data.map((t, i) => t/vector[i]).every((t, i, arr) => t === arr[0]);\r\n    }\r\n    asUnit() {\r\n        return this.divideConst(this.module());\r\n    }\r\n}","import Matrix from \"./matrix\";\r\n\r\nexport default class LinAlg {\r\n\r\n    static distance2D(x1, x2, y1, y2) {\r\n        return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\r\n    }\r\n\r\n    static distance3D(x1, x2, y1, y2, z1, z2) {\r\n        return Math\r\n    }\r\n\r\n    static rotate2D(vector, theta) {\r\n        const sin = Math.sin(theta);\r\n        const cos = Math.cos(theta);\r\n        return new Matrix([\r\n            [cos, -sin],\r\n            [sin, cos]\r\n        ])\r\n            .multiply(vector.asMarix())\r\n            .asVector();\r\n    }\r\n    static rotateZ(theta) {\r\n        return new Matrix([\r\n            [Math.cos(theta), -Math.sin(theta), 0, 0],\r\n            [Math.sin(theta), Math.cos(theta), 0, 0],\r\n            [0, 0, 1, 0],\r\n            [0, 0, 0, 1]\r\n        ]);\r\n    }\r\n    static rotateY(theta) {\r\n        return new Matrix([\r\n            [Math.cos(theta), 0, Math.sin(theta), 0],\r\n            [0, 1, 0, 0],\r\n            [-Math.sin(theta), 0, Math.cos(theta), 0],\r\n            [0, 0, 0, 1]\r\n        ]);\r\n    }\r\n    static rotateX(theta) {\r\n        return new Matrix([\r\n            [1, 0, 0, 0],\r\n            [0, Math.cos(theta), -Math.sin(theta), 0],\r\n            [0, Math.sin(theta), Math.cos(theta), 0],\r\n            [0, 0, 0, 1]\r\n        ]);\r\n    }\r\n    static scaleXYZ(x, y, z) {\r\n        return new Matrix([\r\n            [x, 0, 0, 0],\r\n            [0, y, 0, 0],\r\n            [0, 0, z, 0],\r\n            [0, 0, 0, 1]\r\n        ]);\r\n    }\r\n    static scale(ratio) {\r\n        return LinAlg.scaleXYZ(ratio, ratio, ratio);\r\n    }\r\n    static rotate(x, y, z) {\r\n        return LinAlg.rotateX(x).multiply(LinAlg.rotateY(y)).multiply(LinAlg.rotateZ(z));\r\n    }\r\n    static translate(x, y, z) {\r\n        return new Matrix([\r\n            [1, 0, 0, x],\r\n            [0, 1, 0, y],\r\n            [0, 0, 1, z],\r\n            [0, 0, 0, 1]\r\n        ]);\r\n    }\r\n}","import Vector from \"../math/vector\";\r\nimport LinAlg from \"../math/linalg\";\r\nimport Matrix from \"../math/matrix\";\r\n\r\nexport default class Camera {\r\n\r\n    static camera = null;\r\n\r\n    constructor() {\r\n        this.position = new Matrix([[1], [1], [1], [1]]);\r\n        this.rotateX = 0;\r\n        this.rotateY = 0;\r\n        this.rotateZ = 0;\r\n        this.scaleX = 0;\r\n        this.scaleY = 0;\r\n        this.scaleZ = 0;\r\n        this.translateX = 0;\r\n        this.translateY = 0;\r\n        this.translateZ = 0;\r\n        this.rotateMatrix = Matrix.identity(4);\r\n        this.scaleMatrix = Matrix.identity(4);\r\n        this.translateMatrix = Matrix.identity(4);\r\n    }\r\n    static getInstance() {\r\n        if (!Camera.camera) {\r\n            Camera.camera = new Camera();\r\n        }\r\n        return Camera.camera;\r\n    }\r\n    rotate(x, y, z) {\r\n        this.rotateX = x;\r\n        this.rotateY = y;\r\n        this.rotateZ = z;\r\n        this.rotateMatrix = LinAlg.rotate(x, y, z);\r\n    }\r\n    scale(x, y, z) {\r\n        this.scaleX = x;\r\n        this.scaleY = y;\r\n        this.scaleZ = z;\r\n        this.scaleMatrix = LinAlg.scaleXYZ(x, y, z);\r\n    }\r\n    translate(x, y, z) {\r\n        this.translateX = x;\r\n        this.translateY = y;\r\n        this.translateZ = z;\r\n        this.translateMatrix = LinAlg.translate(x, y, z);\r\n    }\r\n    getTransformed() {\r\n        return this.translateMatrix.multiply(this.rotateMatrix).multiply(this.scaleMatrix) ;\r\n    }\r\n}","import Object3D from \"./object-3d\";\r\n\r\nexport default class Primitive3D extends Object3D {\r\n\r\n    constructor(colors) {\r\n        super();\r\n    }\r\n}","import LinAlg from \"../math/linalg\";\r\nimport Matrix from \"../math/matrix\";\r\nimport React, {Component} from 'react';\r\nimport Camera from \"./camera\";\r\n\r\nexport default class Object3D extends Component{\r\n\r\n    colors;\r\n    vertexes;\r\n    original_vertexes;\r\n    path;\r\n    constructor(props) {\r\n        super(props);\r\n        this.rotateX = 0;\r\n        this.rotateY = 0;\r\n        this.rotateZ = 0;\r\n        this.scaleX = 0;\r\n        this.scaleY = 0;\r\n        this.scaleZ = 0;\r\n        this.translateX = 0;\r\n        this.translateY = 0;\r\n        this.translateZ = 0;\r\n        this.rotateMatrix = Matrix.identity(4);\r\n        this.scaleMatrix = Matrix.identity(4);\r\n        this.translateMatrix = Matrix.identity(4);\r\n        this.camera = Camera.getInstance();\r\n    }\r\n    rotate(x, y, z) {\r\n        this.rotateX = x;\r\n        this.rotateY = y;\r\n        this.rotateZ = z;\r\n        this.rotateMatrix = LinAlg.rotate(x, y, z);\r\n    }\r\n    scale(x, y, z) {\r\n        this.scaleX = x;\r\n        this.scaleY = y;\r\n        this.scaleZ = z;\r\n        this.scaleMatrix = LinAlg.scaleXYZ(x, y, z);\r\n    }\r\n    translate(x, y, z) {\r\n        this.translateX = x;\r\n        this.translateY = y;\r\n        this.translateZ = z;\r\n        this.translateMatrix = LinAlg.translate(x, y, z);\r\n    }\r\n    transform(callback) {\r\n        // this.vertexes = this.vertexes.map(callback);\r\n    }\r\n    getTransformed() {\r\n        const transform = this.camera.getTransformed().multiply(this.translateMatrix).multiply(this.scaleMatrix).multiply(this.rotateMatrix);\r\n        console.log(transform);\r\n        this.vertexes = this.original_vertexes.map(t => transform.multiply(new Matrix([t]).transpose()).data);\r\n        console.log(this.vertexes);\r\n        return this.path.reduce((a, b) => [...(this.vertexes[a] || a), this.vertexes[b][0], this.vertexes[b][1], this.vertexes[b][2]], []);\r\n\r\n    }\r\n    getTransformedColors() {\r\n        return this.colors.reduce((a, b) => {return [...a, ...b]}, []);\r\n        return this.colors;\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}","import Object3D from \"./object-3d\";\r\nimport Primitive3D from \"./primitive-3d\";\r\nimport React, {Component} from 'react';\r\n\r\nexport default class Cube extends Primitive3D {\r\n\r\n    constructor(colors) {\r\n        super();\r\n        this.original_vertexes = [\r\n            [-0.1, -0.1, -0.1, 1],\r\n            [0.1, -0.1, -0.1, 1],\r\n            [0.1, 0.1, -0.1, 1],\r\n            [-0.1, 0.1, -0.1, 1],\r\n            [-0.1, -0.1, 0.1, 1],\r\n            [0.1, -0.1, 0.1, 1],\r\n            [0.1, 0.1, 0.1, 1],\r\n            [-0.1, 0.1, 0.1, 1],\r\n\r\n        ];\r\n        this.vertexes = this.original_vertexes;\r\n        this.path = [\r\n            0, 1, 2, 0, 2, 3,\r\n            4, 5, 6, 4, 6, 7,\r\n            3, 7, 0, 7, 0, 4,\r\n            1, 2, 6, 1, 6, 5,\r\n            6, 7, 3, 3, 2, 6,\r\n            4, 5, 1, 4, 1, 0,\r\n        ];\r\n        this.colors = [\r\n          colors[0], colors[0], colors[0], colors[0], colors[0], colors[0],\r\n          colors[1], colors[1], colors[1], colors[1], colors[1], colors[1],\r\n          colors[2], colors[2], colors[2], colors[2], colors[2], colors[2],\r\n          colors[3], colors[3], colors[3], colors[3], colors[3], colors[3],\r\n          colors[4], colors[4], colors[4], colors[4], colors[4], colors[4],\r\n          colors[5], colors[5], colors[5], colors[5], colors[5], colors[5],\r\n        ];\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Object3D from \"./object-3d\";\r\nimport Cube from \"./cube\";\r\nimport Camera from \"./camera\";\r\n\r\nexport default class Drawer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.vertexShader =\r\n            '    #version 300 es\\n' +\r\n            '    in vec3 position;\\n' +\r\n            '    in vec4 color;\\n' +\r\n            '    out vec4 fcolor;\\n' +\r\n            '\\n' +\r\n            '    void main()\\n' +\r\n            '    {\\n' +\r\n            '        gl_Position = vec4(position, 1) ;\\n' +\r\n            '        fcolor = color;\\n' +\r\n            '    }\\n' +\r\n            '\\n';\r\n        this.fragmentShader =\r\n            '    #version 300 es\\n' +\r\n            '    precision mediump float;\\n' +\r\n            '    in vec4 fcolor;\\n' +\r\n            '    out vec4 finalColor;\\n' +\r\n            '    void main()\\n' +\r\n            '    {\\n' +\r\n            '        finalColor = fcolor;\\n' +\r\n            '    }\\n' +\r\n            '\\n';\r\n        this.camera = Camera.getInstance();\r\n    }\r\n\r\n    buffer_static_array(data) {\r\n        const buffer = this.gl.createBuffer();\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(data), this.gl.STATIC_DRAW);\r\n        return buffer;\r\n    }\r\n\r\n    compile_shader(shaderText, type) {\r\n        const shader = this.gl.createShader(type);\r\n        this.gl.shaderSource(shader, shaderText);\r\n        this.gl.compileShader(shader);\r\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\r\n            alert(this.gl.getShaderInfoLog(shader));\r\n            return null\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    getProgram(vertexShader, fragmentShader) {\r\n        this.program = this.gl.createProgram();\r\n        this.gl.attachShader(this.program, vertexShader);\r\n        this.gl.attachShader(this.program, fragmentShader);\r\n        this.gl.linkProgram(this.program);\r\n        return this.program;\r\n    }\r\n\r\n    bind(name, buffer, size) {\r\n        const attr = this.gl.getAttribLocation(this.program, name);\r\n        this.gl.enableVertexAttribArray(attr);\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n        this.gl.vertexAttribPointer(attr, size, this.gl.FLOAT, true, 0, 0);\r\n    }\r\n\r\n    prepare(vertexes, colors) {\r\n        const vBuffer = this.buffer_static_array(vertexes);\r\n        const cBuffer = this.buffer_static_array(colors);\r\n        const vertexShader = this.compile_shader(this.vertexShader, this.gl.VERTEX_SHADER);\r\n        const fragmentShader = this.compile_shader(this.fragmentShader, this.gl.FRAGMENT_SHADER);\r\n        this.getProgram(vertexShader, fragmentShader);\r\n        this.gl.useProgram(this.program);\r\n        this.bind('position', vBuffer, 3);\r\n        this.bind('color', cBuffer, 4);\r\n    }\r\n\r\n    draw() {\r\n        const obg3DArr = this.props.children;\r\n        const vertexes = obg3DArr.reduce((a, b) => [...a, ...b.getTransformed()], []);\r\n        const colors = obg3DArr.reduce((a, b) => [...a, ...b.getTransformedColors()], []);\r\n        for (let obg of obg3DArr) {\r\n            obg.rotate(obg.rotateX + .01, obg.rotateY + .01, obg.rotateZ + .01);\r\n        }\r\n        this.prepare(vertexes, colors);\r\n        this.gl.clearColor(1, 1, 1, 1);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n        this.gl.enable(this.gl.DEPTH_TEST);\r\n        this.gl.drawArrays(this.gl.TRIANGLES, 0, vertexes.length / 3);\r\n        // this.camera.translate(this.camera.translateX + 0.001, 0, 0);\r\n        this.camera.rotate(0, this.camera.rotateY + 0.01, 0);\r\n        requestAnimationFrame(() => {this.draw()});\r\n    }\r\n    componentDidMount() {\r\n        this.gl = this.canvas.getContext('webgl2');\r\n        this.draw();\r\n    }\r\n\r\n    render() {\r\n        return <canvas width={window.innerHeight} height={window.innerHeight} ref={ref => this.canvas = ref }/>;\r\n    }\r\n\r\n}","import Primitive3D from \"./primitive-3d\";\r\n\r\nexport default class SquarePyramid extends Primitive3D {\r\n\r\n    constructor(colors) {\r\n        super();\r\n        this.original_vertexes = [\r\n            [-.1, 0, .1, 1],\r\n            [.1, 0, .1, 1],\r\n            [-.1, 0, -.1, 1],\r\n            [.1, 0, -.1, 1],\r\n            [0, 0.17320508, 0, 1],\r\n        ];\r\n        this.vertexes = this.original_vertexes;\r\n        this.path = [\r\n            0, 1, 3, 0, 3, 2,\r\n            0, 1, 4, 0, 2, 4,\r\n            2, 3, 4, 1, 3, 4,\r\n        ];\r\n        // this.vertexes = [\r\n        //     [-.1, 0, .1, 1],\r\n        //     [.1, 0, .1, 1],\r\n        //     [.1, 0, -.1, 1],\r\n        //     [-.1, 0, .1, 1],\r\n        //     [.1, 0, -.1, 1],\r\n        //     [-.1, 0, -.1, 1],\r\n        //\r\n        //     [-.1, 0, .1, 1],\r\n        //     [.1, 0, .1, 1],\r\n        //     [0, 0.17320508, 0, 1],\r\n        //\r\n        //     [-.1, 0, .1, 1],\r\n        //     [-.1, 0, -.1, 1],\r\n        //     [0, 0.17320508, 0, 1],\r\n        //\r\n        //     [-.1, 0, -.1, 1],\r\n        //     [.1, 0, -.1, 1],\r\n        //     [0, 0.17320508, 0, 1],\r\n        //\r\n        //     [.1, 0, .1, 1],\r\n        //     [.1, 0, -.1, 1],\r\n        //     [0, 0.17320508, 0, 1],\r\n        //\r\n        // ];\r\n        this.colors = [\r\n            colors[0], colors[0], colors[0], colors[0], colors[0], colors[0],\r\n            colors[1], colors[1], colors[1], colors[2], colors[2], colors[2],\r\n            colors[3], colors[3], colors[3], colors[4], colors[4], colors[4]\r\n        ]\r\n    }\r\n}","import Primitive3D from \"./primitive-3d\";\r\n\r\nexport default class TriangularPyramid extends Primitive3D {\r\n\r\n    // 0.036055513\r\n    // 0.0346410162\r\n    // 0.0173205081\r\n    constructor(colors) {\r\n        super();\r\n        this.original_vertexes = [\r\n            [0, 0.08660254037844387, -0.09013878188659974, 1],\r\n            [-.1, -0.08660254037844387, -0.09013878188659974, 1],\r\n            [.1, -0.08660254037844387, -0.09013878188659974, 1],\r\n            [0, 0, 0.09013878188659974, 1],\r\n        ];\r\n        this.vertexes = this.original_vertexes;\r\n        this.path = [\r\n            0, 1, 2, 0, 1, 3,\r\n            1, 2, 3, 0, 2, 3\r\n        ];\r\n        this.colors = [\r\n            colors[0], colors[0], colors[0],\r\n            colors[1], colors[1], colors[1],\r\n            colors[2], colors[2], colors[2],\r\n            colors[3], colors[3], colors[3]\r\n        ];\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {Vector} from \"./math/vector\";\r\nimport LinAlg from \"./math/linalg\";\r\nimport Matrix from \"./math/matrix\";\r\nimport add from \"./math/tensors/add\";\r\nimport variable from \"./math/tensors/variable\";\r\nimport times from \"./math/tensors/times\";\r\nimport substract from \"./math/tensors/substract\";\r\nimport divide from \"./math/tensors/divide\";\r\nimport placeholder from \"./math/tensors/placeholder\";\r\nimport Shader from \"./gl-tools/shader\";\r\nimport Drawer from \"./gl-tools/drawer\";\r\nimport Object3D from \"./gl-tools/object-3d\";\r\nimport Cube from \"./gl-tools/cube\";\r\nimport SquarePyramid from \"./gl-tools/square-pyramid\";\r\nimport TriangularPyramid from \"./gl-tools/triangular-pyramid\";\r\nimport Camera from \"./gl-tools/camera\";\r\n\r\nfunction App() {\r\n\r\n  const mat = new Matrix([\r\n      [1, 2, 3, 4],\r\n      [2, 3, 4, 5],\r\n      [3, 4, 5, 6],\r\n      [6, 7, 8, 9]\r\n  ]);\r\n  console.log(mat.multiply(Matrix.identity(4)));\r\n  const cube1 = new Cube([\r\n          [.3, .6, .9, 1],\r\n          [.3, .9, .6, 1],\r\n          [.6, .3, .9, 1],\r\n          [.6, .9, .3, 1],\r\n          [.9, .3, .6, 1],\r\n          [.9, .6, .3, 1],\r\n      ]);\r\n  const cube2 = new SquarePyramid([\r\n      [.3, .6, .9, 1],\r\n      [.3, .9, .6, 1],\r\n      [.6, .3, .9, 1],\r\n      [.6, .9, .3, 1],\r\n      [.9, .3, .6, 1],\r\n  ]);\r\n  const cube3 = new TriangularPyramid([\r\n      [.3, .6, .9, 1],\r\n      [.3, .9, .6, 1],\r\n      [.6, .3, .9, 1],\r\n      [.6, .9, .3, 1]\r\n  ]);\r\n  cube1.translate(.2, .2, .2);\r\n  cube2.translate(-.3,  -.3, -.3);\r\n  cube3.translate(.2, -.4, .1);\r\n  return (\r\n    <div className=\"App\">\r\n        <Drawer>\r\n            {[cube1, cube2, cube3]}\r\n        </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}